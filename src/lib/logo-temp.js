// @ts-nocheck
/* App.svelte generated by Svelte v4.2.17 */
import {
    SvelteComponent,
    add_render_callback,
    append,
    append_styles,
    attr,
    create_in_transition,
    detach,
    empty,
    init,
    insert,
    noop,
    safe_not_equal,
    set_style,
    svg_element,
    text,
    transition_in
} from "svelte/internal";

import "svelte/internal/disclose-version";
import { onMount } from 'svelte';
import { fade, draw, fly } from 'svelte/transition';

function add_css(target) {
    append_styles(target, "svelte-1vyqmox", "svg.svelte-1vyqmox{--pico-color:red;width:30vw;fill:var(--pico-color);display:block;margin:var(--pico-spacing) auto}");
}

// (15:0) {#if visible}
function create_if_block(ctx) {
    let svg;
    let style;
    let t;
    let ellipse0;
    let ellipse0_intro;
    let ellipse1;
    let ellipse1_intro;
    let path0;
    let path0_intro;
    let path1;
    let path1_intro;
    let path2;
    let path2_intro;
    let path3;
    let path3_intro;
    let path4;
    let path4_intro;
    let path5;
    let path5_intro;
    let g0;
    let path6;
    let path6_intro;
    let path7;
    let path7_intro;
    let line0;
    let line0_intro;
    let g1;
    let path8;
    let path8_intro;
    let path9;
    let path9_intro;
    let line1;
    let line1_intro;
    let g2;
    let path10;
    let path10_intro;
    let path11;
    let path11_intro;
    let line2;
    let line2_intro;

    return {
        c() {
            svg = svg_element("svg");
            style = svg_element("style");
            t = text(".st0 {\n\t\t\t\tfill: none;\n\t\t\t\tstroke: var(--pico-color);\n\t\t\t\tstroke-width: 9.7717;\n\t\t\t}\n\t\t\t.st1 {\n\t\t\t\tfill: none;\n\t\t\t\tstroke: var(--pico-color);\n\t\t\t\tstroke-width: 8.8707;\n\t\t\t}\n\t\t\t.st2 {\n\t\t\t\tstroke: var(--pico-color);\n\t\t\t\tstroke-width: 0.8661;\n\t\t\t}\n\t\t\t.st3 {\n\t\t\t\tfill: none;\n\t\t\t\tstroke: var(--pico-color);\n\t\t\t\tstroke-width: 0.8661;\n\t\t\t}\n\t\t\t.st4 {\n\t\t\t\tfill: none;\n\t\t\t\tstroke: var(--pico-color);\n\t\t\t\tstroke-width: 4.1159;\n\t\t\t\tstroke-linecap: round;\n\t\t\t}\n\t\t\t.st5 {\n\t\t\t\tfill: none;\n\t\t\t\tstroke: var(--pico-color);\n\t\t\t\tstroke-width: 4.056;\n\t\t\t\tstroke-linecap: round;\n\t\t\t}\n\t\t\t.st6 {\n\t\t\t\tfill: none;\n\t\t\t\tstroke: var(--pico-color);\n\t\t\t\tstroke-width: 8.6;\n\t\t\t\tstroke-linecap: round;\n\t\t\t\tstroke-miterlimit: 10;\n\t\t\t}\n\t\t");
            ellipse0 = svg_element("ellipse");
            ellipse1 = svg_element("ellipse");
            path0 = svg_element("path");
            path1 = svg_element("path");
            path2 = svg_element("path");
            path3 = svg_element("path");
            path4 = svg_element("path");
            path5 = svg_element("path");
            g0 = svg_element("g");
            path6 = svg_element("path");
            path7 = svg_element("path");
            line0 = svg_element("line");
            g1 = svg_element("g");
            path8 = svg_element("path");
            path9 = svg_element("path");
            line1 = svg_element("line");
            g2 = svg_element("g");
            path10 = svg_element("path");
            path11 = svg_element("path");
            line2 = svg_element("line");
            attr(style, "type", "text/css");
            attr(ellipse0, "id", "outer-circle");
            attr(ellipse0, "class", "st0");
            attr(ellipse0, "cx", "161.7");
            attr(ellipse0, "cy", "161.7");
            attr(ellipse0, "rx", "155.7");
            attr(ellipse0, "ry", "155.7");
            attr(ellipse0, "transform", "rotate(+19 161.7 161.7)");
            attr(ellipse1, "id", "inner-circle");
            attr(ellipse1, "class", "st1");
            attr(ellipse1, "cx", "160.7");
            attr(ellipse1, "cy", "161.4");
            attr(ellipse1, "rx", "133.6");
            attr(ellipse1, "ry", "133.6");
            attr(ellipse1, "transform", "rotate(-19 160.7 161.4)");
            attr(path0, "id", "T-fill");
            attr(path0, "class", "st2");
            attr(path0, "d", "M190.9,79.5l-1.2,83.6c0,0-0.9,9.3,3.8,14.4c3.9,4.2,15.3,3.7,15.3,3.7l34.7,0.5l3.4,0.1l0.6-46.3\n\tl-38.8-0.5c0,0-3.5,0.2-6.1-2.2c-2.6-2.4-2.2-6.8-2.2-6.8l0.6-46.2L190.9,79.5z M206.4,139.5l13.8,0l-12.5,8.8v0.1l29.4,0.1\n\tl-0.1,17.7l-29.4-0.1v0.1l12.5,8.9l-13.9-0.1L206.4,139.5z");
            attr(path1, "id", "T-outline");
            attr(path1, "class", "st3");
            attr(path1, "d", "M190.9,79.5l-1.2,83.6c0,0-0.9,9.3,3.8,14.4c3.9,4.2,15.3,3.7,15.3,3.7l34.7,0.5l3.4,0.1\n\tl0.6-46.3l-38.8-0.5c0,0-3.5,0.2-6.1-2.2c-2.6-2.4-2.2-6.8-2.2-6.8l0.6-46.2L190.9,79.5z M206.4,139.5l13.8,0l-12.5,8.8v0.1\n\tl29.4,0.1l-0.1,17.7l-29.4-0.1v0.1l12.5,8.9l-13.9-0.1L206.4,139.5z");
            attr(path2, "id", "D-fill");
            attr(path2, "class", "st2");
            attr(path2, "d", "M132.6,81.3l-39.3,24.5l20.5,32.9c0,0,2.1,2.8,1.5,6.3c-0.6,3.5-4.6,5.6-4.6,5.6l-39.2,24.4\n\tl5.4,8.7l71-44.2c0,0,8.3-4.2,10.1-10.9c1.4-5.6-5.2-14.9-5.2-14.9l-18.3-29.5L132.6,81.3z M130.2,92.2l9.2,15.1l-26.2,16.1\n\tl-9.2-15.1L130.2,92.2z M140.8,109.5l1.2,1.9c1.4,2.4,2.2,5,2.2,7.8c0.1,2.8-0.5,5.5-1.8,7.9c-1.3,2.5-3.1,4.4-5.4,5.8\n\tc-1.7,1.1-3.6,1.7-5.6,2.1c-2,0.3-4,0.2-6-0.3c-1.9-0.5-3.8-1.4-5.5-2.6c-1.7-1.2-3.1-2.6-4-4.2l-1.4-2.2L140.8,109.5z");
            attr(path3, "id", "D-outline");
            attr(path3, "class", "st3");
            attr(path3, "d", "M132.6,81.3l-39.3,24.5l20.5,32.9c0,0,2.1,2.8,1.5,6.3c-0.6,3.5-4.6,5.6-4.6,5.6l-39.2,24.4\n\tl5.4,8.7l71-44.2c0,0,8.3-4.2,10.1-10.9c1.4-5.6-5.2-14.9-5.2-14.9l-18.3-29.5L132.6,81.3z M130.2,92.2l9.2,15.1l-26.2,16.1\n\tl-9.2-15.1L130.2,92.2z M140.8,109.5l1.2,1.9c1.4,2.4,2.2,5,2.2,7.8c0.1,2.8-0.5,5.5-1.8,7.9c-1.3,2.5-3.1,4.4-5.4,5.8\n\tc-1.7,1.1-3.6,1.7-5.6,2.1c-2,0.3-4,0.2-6-0.3c-1.9-0.5-3.8-1.4-5.5-2.6c-1.7-1.2-3.1-2.6-4-4.2l-1.4-2.2L140.8,109.5z");
            attr(path4, "id", "A-fill");
            attr(path4, "class", "st2");
            attr(path4, "d", "M137.1,182.7c-0.9,0-1.7,0-2.6,0.2c-5.6,1.2-11,11.3-11,11.3l-18.2,29.5l-1.8,2.9l39.4,24.4\n\tl20.4-33c0,0,1.6-3.1,5-4.2c3.4-1,7,1.6,7,1.6l39.3,24.3l5.4-8.7l-71.1-44C148.8,187.1,143,182.8,137.1,182.7z M140.2,201.5l8,4.8\n\tl-4.4,33.5l-17.1-10.2l2.1-14.3l-2.4-1.5l-2.2,14.3l-11.1-6.7l13.7-10l2.4,1.4l0.5-3.5L140.2,201.5z");
            attr(path5, "id", "A-outline");
            attr(path5, "class", "st3");
            attr(path5, "d", "M137.1,182.7c-0.9,0-1.7,0-2.6,0.2c-5.6,1.2-11,11.3-11,11.3l-18.2,29.5l-1.8,2.9l39.4,24.4\n\tl20.4-33c0,0,1.6-3.1,5-4.2c3.4-1,7,1.6,7,1.6l39.3,24.3l5.4-8.7l-71.1-44C148.8,187.1,143,182.8,137.1,182.7z M140.2,201.5l8,4.8\n\tl-4.4,33.5l-17.1-10.2l2.1-14.3l-2.4-1.5l-2.2,14.3l-11.1-6.7l13.7-10l2.4,1.4l0.5-3.5L140.2,201.5z");
            attr(path6, "id", "path3025");
            attr(path6, "class", "st4");
            attr(path6, "d", "M-246.4,1093.2c12.5,1.1,0.2-12.1-6-5.7c-4.5,4.7-1.8,11,3.9,11.8c5.8,0.8,9.5,0.1,12.2-3.7\n\t\tc2.5-3.4,3.9-10.3-6-15.4c-8.5-3.3-21.6,1.4-20.5,13.7c0.7,12.9,18.4,13.1,25.7,10.2c7.1-2.8,9.9-8.1,17.9-12.8\n\t\tc8.2-4.8,12,7,0.5,8.5c-13.5,2.8,15.2,5.6,20.7,5c10.7-1.4-5.9-11.3-7-4.8");
            attr(path7, "id", "path3027");
            attr(path7, "class", "st5");
            attr(path7, "d", "M-283,1092.8c-12.1,1.1-0.2-12.1,5.8-5.7c4.4,4.7,1.8,11-3.7,11.8c-5.6,0.8-9.2,0.1-11.8-3.7\n\t\tc-2.4-3.4-3.8-10.3,5.8-15.4c8.3-3.3,21,1.4,19.9,13.7c-0.7,12.9-17.9,13.1-24.9,10.2c-6.9-2.8-9.6-8.1-17.4-12.8\n\t\tc-7.9-4.8-11.6,7-0.5,8.5c13.1,2.8-14.8,5.6-20.1,5c-10.4-1.4,5.7-11.3,6.8-4.8");
            attr(g0, "id", "right-deco");
            attr(g0, "transform", "rotate(120.03416,247.85369,805.3956)");
            attr(line0, "id", "bar-right");
            attr(line0, "class", "st6");
            attr(line0, "x1", "188.7");
            attr(line0, "y1", "291.2");
            attr(line0, "x2", "287.2");
            attr(line0, "y2", "122.3");
            attr(path8, "id", "path6244");
            attr(path8, "class", "st4");
            attr(path8, "d", "M858.2,957.9c12.5,1.1,0.2-12.1-6-5.7c-4.5,4.7-1.8,11,3.9,11.8c5.8,0.8,9.5,0.1,12.2-3.7\n\t\tc2.5-3.4,3.9-10.3-6-15.4c-8.5-3.3-21.6,1.4-20.5,13.7c0.7,12.9,18.4,13.1,25.7,10.2c7.1-2.8,9.9-8.1,17.9-12.8\n\t\tc8.2-4.8,12,7,0.5,8.5c-13.5,2.8,15.2,5.6,20.7,5c10.7-1.4-5.9-11.3-7-4.8");
            attr(path9, "id", "path6246");
            attr(path9, "class", "st5");
            attr(path9, "d", "M821.6,957.5c-12.1,1.1-0.2-12.1,5.8-5.7c4.4,4.7,1.8,11-3.7,11.8c-5.6,0.8-9.2,0.1-11.8-3.7\n\t\tc-2.4-3.4-3.8-10.3,5.8-15.4c8.3-3.3,21,1.4,19.9,13.7c-0.7,12.9-17.9,13.1-24.9,10.2c-6.9-2.8-9.6-8.1-17.4-12.8\n\t\tc-7.9-4.8-11.6,7-0.5,8.5c13.1,2.8-14.8,5.6-20.1,5c-10.4-1.4,5.7-11.3,6.8-4.8");
            attr(g1, "id", "left-deco");
            attr(g1, "transform", "rotate(-121.28541,246.24641,805.86387)");
            attr(line1, "id", "bar-left");
            attr(line1, "class", "st6");
            attr(line1, "x2", "137.1");
            attr(line1, "y2", "291.5");
            attr(line1, "x1", "33.2");
            attr(line1, "y1", "120.3");
            attr(path10, "id", "path3939");
            attr(path10, "class", "st4");
            attr(path10, "d", "M177.3,57.4c12.5,1.1,0.2-12.1-6-5.7c-4.5,4.7-1.8,11,3.9,11.8c5.8,0.8,9.5,0.1,12.2-3.7\n            c2.5-3.4,3.9-10.3-6-15.4c-8.5-3.3-21.6,1.4-20.5,13.7c0.7,12.9,18.4,13.1,25.7,10.2c7.1-2.8,9.9-8.1,17.9-12.8\n            c8.2-4.8,12,7,0.5,8.5c-13.5,2.8,15.2,5.6,20.7,5c10.7-1.4-5.9-11.3-7-4.8");
            attr(path11, "id", "path3941");
            attr(path11, "class", "st5");
            attr(path11, "d", "M140.6,57c-12.1,1.1-0.2-12.1,5.8-5.7c4.4,4.7,1.8,11-3.7,11.8c-5.6,0.8-9.2,0.1-11.8-3.7\n\t\tc-2.4-3.4-3.8-10.3,5.8-15.4c8.3-3.3,21,1.4,19.9,13.7c-0.7,12.9-17.9,13.1-24.9,10.2c-6.9-2.8-9.6-8.1-17.4-12.8\n\t\tc-7.9-4.8-11.6,7-0.5,8.5c13.1,2.8-14.8,5.6-20.1,5c-10.4-1.4,5.7-11.3,6.8-4.8");
            attr(g2, "id", "top-deco");
            attr(g2, "transform", "rotate(0.25944993,844.97532,417.99841)");
            attr(line2, "id", "bar-top");
            attr(line2, "class", "st6");
            attr(line2, "x1", "58.9");
            attr(line2, "y1", "75");
            attr(line2, "x2", "263.4");
            attr(line2, "y2", "75.9");
            attr(svg, "version", "1.1");
            attr(svg, "id", "svg2");
            attr(svg, "x", "0px");
            attr(svg, "y", "0px");
            attr(svg, "viewBox", "0 0 323.4 323.4");
            set_style(svg, "enable-background", "new 0 0 323.4 323.4");
            attr(svg, "xml:space", "preserve");
            attr(svg, "class", "svelte-1vyqmox");
        },
        m(target, anchor) {
            insert(target, svg, anchor);
            append(svg, style);
            append(style, t);
            append(svg, ellipse0);
            append(svg, ellipse1);
            append(svg, path0);
            append(svg, path1);
            append(svg, path2);
            append(svg, path3);
            append(svg, path4);
            append(svg, path5);
            append(svg, g0);
            append(g0, path6);
            append(g0, path7);
            append(svg, line0);
            append(svg, g1);
            append(g1, path8);
            append(g1, path9);
            append(svg, line1);
            append(svg, g2);
            append(g2, path10);
            append(g2, path11);
            append(svg, line2);
        },
        i(local) {
            if (local) {
                if (!ellipse0_intro) {
                    add_render_callback(() => {
                        ellipse0_intro = create_in_transition(ellipse0, draw, { speed: 0.11, delay: 3500 });
                        ellipse0_intro.start();
                    });
                }
            }

            if (local) {
                if (!ellipse1_intro) {
                    add_render_callback(() => {
                        ellipse1_intro = create_in_transition(ellipse1, draw, { speed: 0.11, delay: 2500 });
                        ellipse1_intro.start();
                    });
                }
            }

            if (local) {
                if (!path0_intro) {
                    add_render_callback(() => {
                        path0_intro = create_in_transition(path0, fade, { duration: 1000, delay: 14000 });
                        path0_intro.start();
                    });
                }
            }

            if (local) {
                if (!path1_intro) {
                    add_render_callback(() => {
                        path1_intro = create_in_transition(path1, draw, { duration: 6000, delay: 10000 });
                        path1_intro.start();
                    });
                }
            }

            if (local) {
                if (!path2_intro) {
                    add_render_callback(() => {
                        path2_intro = create_in_transition(path2, fade, { duration: 1000, delay: 14000 });
                        path2_intro.start();
                    });
                }
            }

            if (local) {
                if (!path3_intro) {
                    add_render_callback(() => {
                        path3_intro = create_in_transition(path3, draw, { duration: 6000, delay: 8000 });
                        path3_intro.start();
                    });
                }
            }

            if (local) {
                if (!path4_intro) {
                    add_render_callback(() => {
                        path4_intro = create_in_transition(path4, fade, { duration: 1000, delay: 14000 });
                        path4_intro.start();
                    });
                }
            }

            if (local) {
                if (!path5_intro) {
                    add_render_callback(() => {
                        path5_intro = create_in_transition(path5, draw, { duration: 6000, delay: 6000 });
                        path5_intro.start();
                    });
                }
            }

            if (local) {
                if (!path6_intro) {
                    add_render_callback(() => {
                        path6_intro = create_in_transition(path6, draw, { speed: 0.03, delay: 5300 });
                        path6_intro.start();
                    });
                }
            }

            if (local) {
                if (!path7_intro) {
                    add_render_callback(() => {
                        path7_intro = create_in_transition(path7, draw, { speed: 0.03, delay: 5700 });
                        path7_intro.start();
                    });
                }
            }

            if (local) {
                if (!line0_intro) {
                    add_render_callback(() => {
                        line0_intro = create_in_transition(line0, draw, { speed: 0.05, delay: 1 });
                        line0_intro.start();
                    });
                }
            }

            if (local) {
                if (!path8_intro) {
                    add_render_callback(() => {
                        path8_intro = create_in_transition(path8, draw, { speed: 0.03, delay: 7500 });
                        path8_intro.start();
                    });
                }
            }

            if (local) {
                if (!path9_intro) {
                    add_render_callback(() => {
                        path9_intro = create_in_transition(path9, draw, { speed: 0.03, delay: 8300 });
                        path9_intro.start();
                    });
                }
            }

            if (local) {
                if (!line1_intro) {
                    add_render_callback(() => {
                        line1_intro = create_in_transition(line1, draw, { speed: 0.05, delay: 6000 });
                        line1_intro.start();
                    });
                }
            }

            if (local) {
                if (!path10_intro) {
                    add_render_callback(() => {
                        path10_intro = create_in_transition(path10, draw, { speed: 0.03, delay: 8300 });
                        path10_intro.start();
                    });
                }
            }

            if (local) {
                if (!path11_intro) {
                    add_render_callback(() => {
                        path11_intro = create_in_transition(path11, draw, { speed: 0.03, delay: 7500 });
                        path11_intro.start();
                    });
                }
            }

            if (local) {
                if (!line2_intro) {
                    add_render_callback(() => {
                        line2_intro = create_in_transition(line2, draw, { speed: 0.05, delay: 6000 });
                        line2_intro.start();
                    });
                }
            }
        },
        o: noop,
        d(detaching) {
            if (detaching) {
                detach(svg);
            }
        }
    };
}

function create_fragment(ctx) {
    let if_block_anchor;
    let if_block = /*visible*/ ctx[0] && create_if_block(ctx);

    return {
        c() {
            if (if_block) if_block.c();
            if_block_anchor = empty();
        },
        m(target, anchor) {
            if (if_block) if_block.m(target, anchor);
            insert(target, if_block_anchor, anchor);
        },
        p(ctx, [dirty]) {
            if (/*visible*/ ctx[0]) {
                if (if_block) {
                    if (dirty & /*visible*/ 1) {
                        transition_in(if_block, 1);
                    }
                } else {
                    if_block = create_if_block(ctx);
                    if_block.c();
                    transition_in(if_block, 1);
                    if_block.m(if_block_anchor.parentNode, if_block_anchor);
                }
            } else if (if_block) {
                if_block.d(1);
                if_block = null;
            }
        },
        i(local) {
            transition_in(if_block);
        },
        o: noop,
        d(detaching) {
            if (detaching) {
                detach(if_block_anchor);
            }

            if (if_block) if_block.d(detaching);
        }
    };
}

function instance($$self, $$props, $$invalidate) {
    let visible = false;

    onMount(async () => {
        $$invalidate(0, visible = false);

        setTimeout(
            () => {
                $$invalidate(0, visible = true);
            },
            100
        );
    });

    return [visible];
}

class App extends SvelteComponent {
    constructor(options) {
        super();
        init(this, options, instance, create_fragment, safe_not_equal, {}, add_css);
    }
}

export default App;